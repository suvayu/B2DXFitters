/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef CPOBSERVABLE
#define CPOBSERVABLE

#include "RooAbsReal.h"
#include "RooRealProxy.h"
 
class CPObservable : public RooAbsReal {
public:
  typedef enum { C = 0, D = 1, S = 2, Dbar = 3, Sbar = 4 } which;

  CPObservable() : what(C) {}; 
  CPObservable(const char *name, const char *title,
	      RooAbsReal& _lambda,
	      RooAbsReal& _phi_strong, RooAbsReal& _phi_weak,
	      CPObservable::which _what);
  CPObservable(const CPObservable& other, const char* name = 0);
  CPObservable& operator=(const CPObservable& other);
  virtual TObject* clone(const char* newname) const
  { return new CPObservable(*this, newname); }
  virtual ~CPObservable();

protected:
  RooRealProxy lambda;
  RooRealProxy phi_strong;
  RooRealProxy phi_weak;
  int what;
  
  Double_t evaluate() const;

private:
  ClassDef(CPObservable, 1);
};
 
#endif
