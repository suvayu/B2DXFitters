/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/ 

// Your description goes here... 

#include "Riostream.h" 

#include "B2DXFitters/PlotSettings.h" 
#include "TString.h"
#include "TNamed.h"
#include <math.h> 

#include <vector>

PlotSettings::PlotSettings(const TString& name, const TString& title)
{
  TNamed(name,title);
  _dir = "Plot";
  _ext = "pdf";
  _bin = 100;
  _log = false;
  _title = false;
  _save = true;
  _colorData.push_back(kBlue+2);
  _colorPdf.push_back(kBlue+2);
  _colorData.push_back(kRed);
  _colorPdf.push_back(kRed);
  _colorData.push_back(kOrange);
  _colorPdf.push_back(kOrange);
  _colorData.push_back(kGreen+3);
  _colorPdf.push_back(kGreen+3);
  _stylePdf.push_back(1);
  _stylePdf.push_back(2);
  _stylePdf.push_back(2);
  _stylePdf.push_back(2);

}

PlotSettings::PlotSettings(const TString& name, const TString& title, TString dir, TString ext, Int_t bin, Bool_t save, Bool_t log, Bool_t titles)
{
  TNamed(name,title);
  _dir = dir;
  _ext = ext;
  _bin = bin; 
  _save = save;
  _log = log;
  _title = titles;
  _colorData.push_back(kBlue+2);
  _colorPdf.push_back(kBlue+2);
  _colorData.push_back(kOrange);
  _colorPdf.push_back(kOrange);
  _colorData.push_back(kRed);
  _colorPdf.push_back(kRed);
  _colorData.push_back(kGreen+3);
  _colorPdf.push_back(kGreen+3);
  _stylePdf.push_back(1);
  _stylePdf.push_back(2);
  _stylePdf.push_back(2);
  _stylePdf.push_back(2);
}

PlotSettings::PlotSettings(const TString& name, const TString& title,
			   TString dir, TString ext, Int_t bin, Bool_t save, Bool_t log, Bool_t titles, 
			   std::vector <Color_t> colorData, std::vector <Color_t> colorPdf, std::vector <Style_t> stylePdf)
{
  TNamed(name,title);
  _dir = dir;
  _ext = ext;
  _bin = bin;
  _save = save;
  _log = log; 
  _title = titles;
  _colorData = colorData;
  _colorPdf = colorPdf;
  _stylePdf = stylePdf;
}

PlotSettings::PlotSettings(const PlotSettings& other) :
  TNamed(other){
  _dir = other._dir;
  _ext = other._ext;
  _bin = other._bin;
  _save = other._save;
  _log = other._log;
  _title = other._title;
  _colorData = other._colorData;
  _colorPdf = other._colorPdf;
  _stylePdf = other._stylePdf;
}

std::ostream & operator<< (std::ostream &out, const PlotSettings &s)         
{
  out<<"PlotSettings("<<s.GetName()<<","<<s.GetTitle()<<")"<<std::endl;
  out<<"Directory: " <<s._dir<<std::endl;
  out<<"Extenstion: "<<s._ext<<std::endl;
  out<<"Bin: "<<s._bin<<" Save Status: "<<s._save<<" Log Status: "<<s._log<<" Title Status: "<<s._title<<std::endl;
  out<<"ColorData: ";
  for(unsigned int i = 0; i<s._colorData.size(); i++)
    {
      out<<s._colorData[i]<<" ";
    }
  out<<std::endl;
  out<<"ColorPdf: ";
  for(unsigned int i = 0; i<s._colorPdf.size(); i++)
    {
      out<<s._colorPdf[i]<<" ";
    }
  out<<std::endl;
  out<<"StylePdf: ";
  for(unsigned int i = 0; i<s._stylePdf.size(); i++)
    {
      out<<s._stylePdf[i]<<" ";
    }
  out<<std::endl;
  return out;

}


PlotSettings::~PlotSettings() { }


